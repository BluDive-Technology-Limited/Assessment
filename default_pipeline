pipeline {
    agent any

    parameters {
        string(name: 'GIT_URL', defaultValue: '', description: 'Git repo URL of the project')
        string(name: 'GIT_BRANCH', defaultValue: 'main', description: 'Branch to build')
    }

    environment {
        PROJECT_NAME = "${params.GIT_URL.split('/')[-1].replace('.git', '').toLowerCase()}"
        DOCKERHUB_USERNAME = 'your-dockerhub-username'
    }

    stages {
        stage('Checkout') {
            steps {
                git url: "${params.GIT_URL}", branch: "${params.GIT_BRANCH}", credentialsId: 'github-credentials'
            }
        }

        stage('Docker Build & Push') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub-jenkins', usernameVariable: 'DOCKERHUB_USERNAME', passwordVariable: 'DOCKERHUB_PASSWORD')]) {
                    sh """
                        docker build -t ${DOCKERHUB_USERNAME}/${PROJECT_NAME}:${BUILD_NUMBER} .
                        docker tag ${DOCKERHUB_USERNAME}/${PROJECT_NAME}:${BUILD_NUMBER} ${DOCKERHUB_USERNAME}/${PROJECT_NAME}:latest
                        echo "${DOCKERHUB_PASSWORD}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin
                        docker push ${DOCKERHUB_USERNAME}/${PROJECT_NAME}:${BUILD_NUMBER}
                        docker push ${DOCKERHUB_USERNAME}/${PROJECT_NAME}:latest
                    """
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                withCredentials([file(credentialsId: 'kubeconfig-prod', variable: 'KUBECONFIG_FILE')]) {
                    sh '''
                        export KUBECONFIG=$KUBECONFIG_FILE
                        sed -i 's|image: .*|image: orisuniyanu/flaskapp1:${BUILD_NUMBER}|' k8s/deployment.yaml
                        kubectl apply -f k8s/deployment.yaml
                        kubectl apply -f k8s/service.yaml
                    '''
                }
            }
        }

        stage('Verify Deployment') {
            steps {
                sh "kubectl rollout status deployment/${PROJECT_NAME} --timeout=60s"
            }
        }
    }
}
